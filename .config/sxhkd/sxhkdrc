#
# wm independent hotkeys
#

# open terminal in floating state
# super + shift + Return
# 	bspc rule -a Alacritty -o state=floating layer=above && alacritty

XF86WebCam
	scrot -u /tmp/screenshot.png

{_, shift +, ctrl +} Print
	capture_from_clipboard.sh {clipboard, primary, manual}

ctrl + Insert
	chey_todo.sh capture

# program launcher
super + a
	rofi -no-lazy-grab -show drun -modi drun

# window switcher
super + shift + a
	rofi -no-lazy-grab -show window

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

XF86Audio{Raise,Lower}Volume
	amixer -D pulse sset Master 5%{+,-}

XF86AudioPlay
	playerctl play-pause

XF86Audio{Next,Prev}
	playerctl {next,previous}

XF86MonBrightness{Up,Down}
	light -{A,U} 5

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm --restart}

# close and kill
super + {_,shift + }x
	bspc node --{close,kill}

# alternate between the tiled and monocle layout
super + n
	bspc desktop --layout next

# send the current node to the newest preselected node
super + y
	bspc node newest.marked.local --to-node newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node --swap biggest.window --follow

# make all nodes equal in size
super + equal
	bspc node @/ -B

#
# state/flags
#

# toggle the window state
super + {t,shift + t,s,f}
	bspc node --state {\~tiled,\~pseudo_tiled,\~floating,\~fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node --flag {marked,locked,sticky,private}

#
# focus/swap
#

# focus or swap the node in the given direction
super + {h, l}
	window_nav.sh {left, right} 

super + shift + {h,l}
	bspc node --swap {west,east}

# cycle focus
super + {j, k}
	window_nav.sh {down, right} 

# cycle swap node
super + shift + {j,k}
	bspc node --swap {next,prev}.local.!hidden.window

super + {bracketleft,bracketright}
	bspc node @/ -R {-,+}90

super + minus
	bspc node @parent --rotate +90

# focus the last node/desktop
super + {Tab,grave}
	bspc {node,desktop} --focus last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm --record-history off; \
	bspc node {older,newer} --focus; \
	bspc wm --record-history on

# focus or send to the given desktop
super + {_,shift + }{1-4}
	bspc {desktop --focus,node --to-desktop} {1-4}

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node --presel-dir {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node --presel-ratio 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node --presel-dir cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query --nodes --desktop | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node --resize {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node --resize {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node --move {-20 0,0 20,0 -20,20 0}

#
# special windows
#

# terminal emulator
super + Return
	kitty -d $(xcwd)
	# jumpapp uses WM_CLASS only as a fallback in case there is no match
	# with the command nameinstead of forcing it to be an exact match
	# See https://github.com/mkropat/jumpapp/issues/63
	# aim was to bind super+return to below command:
	#	jumpapp -c "merminal" kitty -d $(xcwd) --class "merminal"
	# so that supe+return will always focus this secondary terminal window
	# with the primary one being super+period. super+shift+return will
	# spawn additional secondary terminals as required. The problem
	# is that since jumpapp prioritizes searching by command and falls
	# back to the `-c` option value *only* if search by command fails,
	# super+return will interfere with super+period.

# super + shift + Return
# 	kitty -d $(xcwd) --class "merminal"

# music player
super + c
	raise-or-run.sh cmus "alacritty --class Alacritty,cmus -e cmus" "hide_if_focused=true"

super + comma
	raise-or-run.sh editor "kitty --class editor open-editor-in-project.sh"

super + period
	raise-or-run.sh terminal "kitty --class terminal"
	# jumpapp -c terminal kitty --class terminal

super + slash
	raise-or-run.sh scratchpad "kitty --class scratchpad" "hide_if_focused=true"

super + semicolon
	jumpapp firefox
	# after some time querying for a "firefox" class returns multiple
	# windows, so assign an explicit class name to differentiate them.
	# raise-or-run.sh firefox-main-window "firefox --class firefox-main-window"

super + apostrophe
	toggle-win-visible.sh emulator
